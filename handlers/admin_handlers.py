from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
import logging

logger = logging.getLogger(__name__)

class AdminHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""

    def __init__(self, db_manager):
        self.db = db_manager

    async def admin_start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
        welcome_text = "üîß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"

        keyboard = [
            [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤", callback_data="admin_–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–ø–∏—Å–æ–∫_—Å—Ç–æ–ø_—Å–ª–æ–≤")],
            [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ø —Å–ª–æ–≤–∞", callback_data="admin_–¥–æ–±–∞–≤–∏—Ç—å_—Å—Ç–æ–ø_—Å–ª–æ–≤–∞")],
            [InlineKeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤", callback_data="admin_–æ—á–∏—Å—Ç–∏—Ç—å_—Å–ø–∏—Å–æ–∫_—Å—Ç–æ–ø_—Å–ª–æ–≤")],
            [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é", callback_data="admin_—Å–æ–∑–¥–∞—Ç—å_–ø—É–±–ª–∏–∫–∞—Ü–∏—é")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(welcome_text, reply_markup=reply_markup)

    async def show_stop_words(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤"""
        query = update.callback_query
        await query.answer()

        stop_words = self.db.get_all_stop_words()
        if stop_words:
            words_text = "üìù –°–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤:\n\n" + "\n".join(f"‚Ä¢ {word}" for word in stop_words)
        else:
            words_text = "üìù –°–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤ –ø—É—Å—Ç"

        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_main")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(words_text, reply_markup=reply_markup)

    async def add_stop_words_prompt(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ —Å—Ç–æ–ø-—Å–ª–æ–≤"""
        query = update.callback_query
        await query.answer()

        text = "üìù –í–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–ø-—Å–ª–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:"
        keyboard = [[InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_cancel")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(text, reply_markup=reply_markup)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å—Ç–æ–ø-—Å–ª–æ–≤
        self.db.update_user_state(update.effective_user.id, "waiting_stop_words")
        return "WAITING_STOP_WORDS"

    async def process_stop_words(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å—Ç–æ–ø-—Å–ª–æ–≤"""
        user_id = update.effective_user.id
        text = update.message.text

        # –†–∞–∑–±–∏—Ä–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        words = [word.strip() for word in text.split(",") if word.strip()]

        if words:
            self.db.add_stop_words(words, user_id)
            response = f"‚úÖ –°—Ç–æ–ø-—Å–ª–æ–≤–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã: {', '.join(words)}"
        else:
            response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å—Ç–æ–ø-—Å–ª–æ–≤–∞"

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        welcome_text = "üîß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        keyboard = [
            [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤", callback_data="admin_–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–ø–∏—Å–æ–∫_—Å—Ç–æ–ø_—Å–ª–æ–≤")],
            [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ø —Å–ª–æ–≤–∞", callback_data="admin_–¥–æ–±–∞–≤–∏—Ç—å_—Å—Ç–æ–ø_—Å–ª–æ–≤–∞")],
            [InlineKeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤", callback_data="admin_–æ—á–∏—Å—Ç–∏—Ç—å_—Å–ø–∏—Å–æ–∫_—Å—Ç–æ–ø_—Å–ª–æ–≤")],
            [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é", callback_data="admin_—Å–æ–∑–¥–∞—Ç—å_–ø—É–±–ª–∏–∫–∞—Ü–∏—é")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await update.message.reply_text(response)
        await update.message.reply_text(welcome_text, reply_markup=reply_markup)

        self.db.update_user_state(user_id, "idle")
        return ConversationHandler.END

    async def clear_stop_words(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞"""
        query = update.callback_query
        await query.answer()

        self.db.clear_stop_words()
        text = "üóëÔ∏è –°–ø–∏—Å–æ–∫ —Å—Ç–æ–ø-—Å–ª–æ–≤ –æ—á–∏—â–µ–Ω"
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_main")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(text, reply_markup=reply_markup)

    async def admin_create_publication(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)"""
        query = update.callback_query
        await query.answer()

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
        from .user_handlers import UserHandlers
        user_handlers = UserHandlers(self.db)

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∞–¥–º–∏–Ω–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await user_handlers.show_main_menu(update, context)

    async def admin_back_to_main(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞"""
        query = update.callback_query
        await query.answer()

        welcome_text = "üîß –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–Ω–µ–ª—å!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        keyboard = [
            [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤", callback_data="admin_–ø—Ä–æ–≤–µ—Ä–∏—Ç—å_—Å–ø–∏—Å–æ–∫_—Å—Ç–æ–ø_—Å–ª–æ–≤")],
            [InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ø —Å–ª–æ–≤–∞", callback_data="admin_–¥–æ–±–∞–≤–∏—Ç—å_—Å—Ç–æ–ø_—Å–ª–æ–≤–∞")],
            [InlineKeyboardButton("–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤", callback_data="admin_–æ—á–∏—Å—Ç–∏—Ç—å_—Å–ø–∏—Å–æ–∫_—Å—Ç–æ–ø_—Å–ª–æ–≤")],
            [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é", callback_data="admin_—Å–æ–∑–¥–∞—Ç—å_–ø—É–±–ª–∏–∫–∞—Ü–∏—é")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(welcome_text, reply_markup=reply_markup)

    async def admin_cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        query = update.callback_query
        await query.answer()

        user_id = update.effective_user.id
        self.db.update_user_state(user_id, "idle")

        await self.admin_back_to_main(update, context)
        return ConversationHandler.END
